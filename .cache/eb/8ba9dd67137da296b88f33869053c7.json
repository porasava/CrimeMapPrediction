{"id":"node_modules/geotiff/dist-module/source/file.js","dependencies":[{"name":"C:\\QGIS data\\web-mapping-application\\package.json","includedInParent":true,"mtime":1657357033911},{"name":"C:\\QGIS data\\web-mapping-application\\node_modules\\geotiff\\package.json","includedInParent":true,"mtime":1656981735220},{"name":"fs","loc":{"line":1,"column":15,"index":15},"parent":"C:\\QGIS data\\web-mapping-application\\node_modules\\geotiff\\dist-module\\source\\file.js","resolved":"C:\\QGIS data\\web-mapping-application\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"./basesource.js","loc":{"line":2,"column":27,"index":48},"parent":"C:\\QGIS data\\web-mapping-application\\node_modules\\geotiff\\dist-module\\source\\file.js","resolved":"C:\\QGIS data\\web-mapping-application\\node_modules\\geotiff\\dist-module\\source\\basesource.js"},{"name":"buffer","parent":"C:\\QGIS data\\web-mapping-application\\node_modules\\geotiff\\dist-module\\source\\file.js","resolved":"C:\\QGIS data\\web-mapping-application\\node_modules\\buffer\\index.js"}],"generated":{"js":"var define;\nvar Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeFileSource = makeFileSource;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _basesource = require(\"./basesource.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction closeAsync(fd) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.close(fd, function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    _fs.default.open(path, flags, mode, function (err, fd) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new Promise(function (resolve, reject) {\n    _fs.default.read.apply(_fs.default, args.concat([function (err, bytesRead, buffer) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          bytesRead: bytesRead,\n          buffer: buffer\n        });\n      }\n    }]));\n  });\n}\n\nvar FileSource = /*#__PURE__*/function (_BaseSource) {\n  _inherits(FileSource, _BaseSource);\n\n  var _super = _createSuper(FileSource);\n\n  function FileSource(path) {\n    var _this;\n\n    _classCallCheck(this, FileSource);\n\n    _this = _super.call(this);\n    _this.path = path;\n    _this.openRequest = openAsync(path, 'r');\n    return _this;\n  }\n\n  _createClass(FileSource, [{\n    key: \"fetchSlice\",\n    value: function () {\n      var _fetchSlice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(slice) {\n        var fd, _yield$readAsync, buffer;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.openRequest;\n\n              case 2:\n                fd = _context.sent;\n                _context.next = 5;\n                return readAsync(fd, Buffer.alloc(slice.length), 0, slice.length, slice.offset);\n\n              case 5:\n                _yield$readAsync = _context.sent;\n                buffer = _yield$readAsync.buffer;\n                return _context.abrupt(\"return\", buffer.buffer);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchSlice(_x) {\n        return _fetchSlice.apply(this, arguments);\n      }\n\n      return fetchSlice;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var fd;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.openRequest;\n\n              case 2:\n                fd = _context2.sent;\n                _context2.next = 5;\n                return closeAsync(fd);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }]);\n\n  return FileSource;\n}(_basesource.BaseSource);\n\nfunction makeFileSource(path) {\n  return new FileSource(path);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":47},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":2,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":4,"column":0}},{"generated":{"line":44,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":4,"column":9},"name":"closeAsync"},{"generated":{"line":44,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":4,"column":0}},{"generated":{"line":44,"column":20},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":4,"column":20},"name":"fd"},{"generated":{"line":44,"column":22},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":4,"column":0}},{"generated":{"line":44,"column":24},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":4,"column":24}},{"generated":{"line":45,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":9}},{"generated":{"line":45,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":13},"name":"Promise"},{"generated":{"line":45,"column":20},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":9}},{"generated":{"line":45,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":21}},{"generated":{"line":45,"column":31},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":22},"name":"resolve"},{"generated":{"line":45,"column":38},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":21}},{"generated":{"line":45,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":31},"name":"reject"},{"generated":{"line":45,"column":46},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":21}},{"generated":{"line":45,"column":48},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":42}},{"generated":{"line":46,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":4},"name":"fs"},{"generated":{"line":46,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":4}},{"generated":{"line":46,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":7},"name":"close"},{"generated":{"line":46,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":4}},{"generated":{"line":46,"column":22},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":13},"name":"fd"},{"generated":{"line":46,"column":24},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":4}},{"generated":{"line":46,"column":26},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":17}},{"generated":{"line":46,"column":36},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":18},"name":"err"},{"generated":{"line":46,"column":39},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":17}},{"generated":{"line":46,"column":41},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":26}},{"generated":{"line":47,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":7,"column":6}},{"generated":{"line":47,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":7,"column":10},"name":"err"},{"generated":{"line":47,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":7,"column":6}},{"generated":{"line":47,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":7,"column":15}},{"generated":{"line":48,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":8,"column":8},"name":"reject"},{"generated":{"line":48,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":8,"column":14}},{"generated":{"line":48,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":8,"column":15},"name":"err"},{"generated":{"line":48,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":8,"column":14}},{"generated":{"line":48,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":8,"column":8}},{"generated":{"line":49,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":9,"column":7}},{"generated":{"line":49,"column":7},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":7,"column":6}},{"generated":{"line":49,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":9,"column":13}},{"generated":{"line":50,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":10,"column":8},"name":"resolve"},{"generated":{"line":50,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":10,"column":15}},{"generated":{"line":51,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":11,"column":7}},{"generated":{"line":52,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":12,"column":5}},{"generated":{"line":52,"column":5},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":6,"column":4}},{"generated":{"line":53,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":13,"column":3}},{"generated":{"line":53,"column":3},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":9}},{"generated":{"line":53,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":5,"column":2}},{"generated":{"line":54,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":14,"column":1}},{"generated":{"line":56,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":0}},{"generated":{"line":56,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":9},"name":"openAsync"},{"generated":{"line":56,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":0}},{"generated":{"line":56,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":19},"name":"path"},{"generated":{"line":56,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":0}},{"generated":{"line":56,"column":25},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":25},"name":"flags"},{"generated":{"line":56,"column":30},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":0}},{"generated":{"line":56,"column":32},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":50}},{"generated":{"line":57,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":50}},{"generated":{"line":57,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":32},"name":"mode"},{"generated":{"line":57,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":50}},{"generated":{"line":57,"column":81},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":39},"name":"undefined"},{"generated":{"line":57,"column":90},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":16,"column":50}},{"generated":{"line":58,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":2}},{"generated":{"line":58,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":9}},{"generated":{"line":58,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":13},"name":"Promise"},{"generated":{"line":58,"column":20},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":9}},{"generated":{"line":58,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":21}},{"generated":{"line":58,"column":31},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":22},"name":"resolve"},{"generated":{"line":58,"column":38},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":21}},{"generated":{"line":58,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":31},"name":"reject"},{"generated":{"line":58,"column":46},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":21}},{"generated":{"line":58,"column":48},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":42}},{"generated":{"line":59,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4},"name":"fs"},{"generated":{"line":59,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4}},{"generated":{"line":59,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":7},"name":"open"},{"generated":{"line":59,"column":20},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4}},{"generated":{"line":59,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":12},"name":"path"},{"generated":{"line":59,"column":25},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4}},{"generated":{"line":59,"column":27},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":18},"name":"flags"},{"generated":{"line":59,"column":32},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4}},{"generated":{"line":59,"column":34},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":25},"name":"mode"},{"generated":{"line":59,"column":38},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4}},{"generated":{"line":59,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":31}},{"generated":{"line":59,"column":50},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":32},"name":"err"},{"generated":{"line":59,"column":53},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":31}},{"generated":{"line":59,"column":55},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":37},"name":"fd"},{"generated":{"line":59,"column":57},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":31}},{"generated":{"line":59,"column":59},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":44}},{"generated":{"line":60,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":19,"column":6}},{"generated":{"line":60,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":19,"column":10},"name":"err"},{"generated":{"line":60,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":19,"column":6}},{"generated":{"line":60,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":19,"column":15}},{"generated":{"line":61,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":20,"column":8},"name":"reject"},{"generated":{"line":61,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":20,"column":14}},{"generated":{"line":61,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":20,"column":15},"name":"err"},{"generated":{"line":61,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":20,"column":14}},{"generated":{"line":61,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":20,"column":8}},{"generated":{"line":62,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":21,"column":7}},{"generated":{"line":62,"column":7},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":19,"column":6}},{"generated":{"line":62,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":21,"column":13}},{"generated":{"line":63,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":22,"column":8},"name":"resolve"},{"generated":{"line":63,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":22,"column":15}},{"generated":{"line":63,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":22,"column":16},"name":"fd"},{"generated":{"line":63,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":22,"column":15}},{"generated":{"line":63,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":22,"column":8}},{"generated":{"line":64,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":23,"column":7}},{"generated":{"line":65,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":24,"column":5}},{"generated":{"line":65,"column":5},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":18,"column":4}},{"generated":{"line":66,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":25,"column":3}},{"generated":{"line":66,"column":3},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":9}},{"generated":{"line":66,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":17,"column":2}},{"generated":{"line":67,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":26,"column":1}},{"generated":{"line":69,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":0}},{"generated":{"line":69,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":9},"name":"readAsync"},{"generated":{"line":69,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":0}},{"generated":{"line":69,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":28}},{"generated":{"line":70,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":28}},{"generated":{"line":70,"column":36},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":22},"name":"args"},{"generated":{"line":70,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":28}},{"generated":{"line":71,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":22},"name":"args"},{"generated":{"line":71,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":28}},{"generated":{"line":72,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":28,"column":28}},{"generated":{"line":74,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":2}},{"generated":{"line":74,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":9}},{"generated":{"line":74,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":13},"name":"Promise"},{"generated":{"line":74,"column":20},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":9}},{"generated":{"line":74,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":21}},{"generated":{"line":74,"column":31},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":22},"name":"resolve"},{"generated":{"line":74,"column":38},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":21}},{"generated":{"line":74,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":31},"name":"reject"},{"generated":{"line":74,"column":46},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":21}},{"generated":{"line":74,"column":48},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":42}},{"generated":{"line":75,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4},"name":"fs"},{"generated":{"line":75,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4}},{"generated":{"line":75,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":7},"name":"read"},{"generated":{"line":75,"column":20},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4}},{"generated":{"line":75,"column":27},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4},"name":"fs"},{"generated":{"line":75,"column":38},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4}},{"generated":{"line":75,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":15},"name":"args"},{"generated":{"line":75,"column":44},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4}},{"generated":{"line":75,"column":53},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":21}},{"generated":{"line":75,"column":63},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":22},"name":"err"},{"generated":{"line":75,"column":66},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":21}},{"generated":{"line":75,"column":68},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":27},"name":"bytesRead"},{"generated":{"line":75,"column":77},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":21}},{"generated":{"line":75,"column":79},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":38},"name":"buffer"},{"generated":{"line":75,"column":85},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":21}},{"generated":{"line":75,"column":87},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":49}},{"generated":{"line":76,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":31,"column":6}},{"generated":{"line":76,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":31,"column":10},"name":"err"},{"generated":{"line":76,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":31,"column":6}},{"generated":{"line":76,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":31,"column":15}},{"generated":{"line":77,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":32,"column":8},"name":"reject"},{"generated":{"line":77,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":32,"column":14}},{"generated":{"line":77,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":32,"column":15},"name":"err"},{"generated":{"line":77,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":32,"column":14}},{"generated":{"line":77,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":32,"column":8}},{"generated":{"line":78,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":33,"column":7}},{"generated":{"line":78,"column":7},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":31,"column":6}},{"generated":{"line":78,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":33,"column":13}},{"generated":{"line":79,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":8},"name":"resolve"},{"generated":{"line":79,"column":15},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":15}},{"generated":{"line":79,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":16}},{"generated":{"line":80,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":18},"name":"bytesRead"},{"generated":{"line":80,"column":19},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":27}},{"generated":{"line":80,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":18},"name":"bytesRead"},{"generated":{"line":80,"column":30},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":16}},{"generated":{"line":81,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":29},"name":"buffer"},{"generated":{"line":81,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":35}},{"generated":{"line":81,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":29},"name":"buffer"},{"generated":{"line":82,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":16}},{"generated":{"line":82,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":15}},{"generated":{"line":82,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":34,"column":8}},{"generated":{"line":83,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":35,"column":7}},{"generated":{"line":84,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":36,"column":5}},{"generated":{"line":84,"column":5},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":30,"column":4}},{"generated":{"line":85,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":37,"column":3}},{"generated":{"line":85,"column":3},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":9}},{"generated":{"line":85,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":29,"column":2}},{"generated":{"line":86,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":38,"column":1}},{"generated":{"line":88,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":40,"column":6},"name":"FileSource"},{"generated":{"line":93,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":2}},{"generated":{"line":93,"column":22},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":14},"name":"path"},{"generated":{"line":93,"column":26},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":2}},{"generated":{"line":93,"column":28},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":20}},{"generated":{"line":94,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":20}},{"generated":{"line":96,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":20}},{"generated":{"line":98,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":42,"column":4}},{"generated":{"line":99,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":43,"column":4}},{"generated":{"line":99,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":43,"column":9},"name":"path"},{"generated":{"line":99,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":43,"column":4}},{"generated":{"line":99,"column":17},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":43,"column":16},"name":"path"},{"generated":{"line":99,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":43,"column":4}},{"generated":{"line":100,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":4}},{"generated":{"line":100,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":9},"name":"openRequest"},{"generated":{"line":100,"column":21},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":4}},{"generated":{"line":100,"column":24},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":23},"name":"openAsync"},{"generated":{"line":100,"column":33},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":32}},{"generated":{"line":100,"column":34},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":33},"name":"path"},{"generated":{"line":100,"column":38},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":32}},{"generated":{"line":100,"column":40},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":39}},{"generated":{"line":100,"column":43},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":32}},{"generated":{"line":100,"column":44},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":44,"column":4}},{"generated":{"line":101,"column":4},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":41,"column":20}},{"generated":{"line":102,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":45,"column":3}},{"generated":{"line":107,"column":83},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":107,"column":100},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":19},"name":"slice"},{"generated":{"line":107,"column":105},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":108,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":110,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":111,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":112,"column":12},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":113,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":114,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":115,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":115,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":49,"column":21}},{"generated":{"line":115,"column":28},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":49,"column":26},"name":"openRequest"},{"generated":{"line":115,"column":39},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":117,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":118,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":49,"column":10},"name":"fd"},{"generated":{"line":118,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":119,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":120,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":120,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":29},"name":"readAsync"},{"generated":{"line":120,"column":32},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":38}},{"generated":{"line":120,"column":33},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":51,"column":6},"name":"fd"},{"generated":{"line":120,"column":35},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":38}},{"generated":{"line":120,"column":37},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":6},"name":"Buffer"},{"generated":{"line":120,"column":43},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":12}},{"generated":{"line":120,"column":44},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":13},"name":"alloc"},{"generated":{"line":120,"column":49},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":6}},{"generated":{"line":120,"column":50},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":19},"name":"slice"},{"generated":{"line":120,"column":55},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":24}},{"generated":{"line":120,"column":56},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":25},"name":"length"},{"generated":{"line":120,"column":62},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":52,"column":6}},{"generated":{"line":120,"column":63},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":38}},{"generated":{"line":120,"column":65},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":53,"column":6}},{"generated":{"line":120,"column":66},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":38}},{"generated":{"line":120,"column":68},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":54,"column":6},"name":"slice"},{"generated":{"line":120,"column":73},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":54,"column":11}},{"generated":{"line":120,"column":74},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":54,"column":12},"name":"length"},{"generated":{"line":120,"column":80},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":38}},{"generated":{"line":120,"column":82},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":55,"column":6},"name":"slice"},{"generated":{"line":120,"column":87},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":55,"column":11}},{"generated":{"line":120,"column":88},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":55,"column":12},"name":"offset"},{"generated":{"line":120,"column":94},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":38}},{"generated":{"line":120,"column":95},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":122,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":123,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":124,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":12},"name":"buffer"},{"generated":{"line":124,"column":22},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":124,"column":42},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":50,"column":12},"name":"buffer"},{"generated":{"line":124,"column":48},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":125,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":125,"column":49},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":57,"column":11},"name":"buffer"},{"generated":{"line":125,"column":55},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":57,"column":17}},{"generated":{"line":125,"column":56},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":57,"column":18},"name":"buffer"},{"generated":{"line":125,"column":62},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":127,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":128,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":129,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":130,"column":12},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":131,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":132,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":133,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":47,"column":2}},{"generated":{"line":144,"column":78},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":145,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":146,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":147,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":148,"column":12},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":149,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":150,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":151,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":151,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":61,"column":21}},{"generated":{"line":151,"column":28},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":61,"column":26},"name":"openRequest"},{"generated":{"line":151,"column":39},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":153,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":154,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":61,"column":10},"name":"fd"},{"generated":{"line":154,"column":18},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":155,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":156,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":156,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":62,"column":10},"name":"closeAsync"},{"generated":{"line":156,"column":33},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":62,"column":20}},{"generated":{"line":156,"column":34},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":62,"column":21},"name":"fd"},{"generated":{"line":156,"column":36},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":62,"column":20}},{"generated":{"line":156,"column":37},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":158,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":159,"column":14},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":160,"column":16},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":161,"column":12},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":162,"column":10},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":163,"column":8},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":164,"column":6},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":60,"column":2}},{"generated":{"line":175,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":40,"column":25},"name":"BaseSource"},{"generated":{"line":177,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":66,"column":7}},{"generated":{"line":177,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":66,"column":16},"name":"makeFileSource"},{"generated":{"line":177,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":66,"column":7}},{"generated":{"line":177,"column":24},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":66,"column":31},"name":"path"},{"generated":{"line":177,"column":28},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":66,"column":7}},{"generated":{"line":177,"column":30},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":66,"column":37}},{"generated":{"line":178,"column":2},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":2}},{"generated":{"line":178,"column":9},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":9}},{"generated":{"line":178,"column":13},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":13},"name":"FileSource"},{"generated":{"line":178,"column":23},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":9}},{"generated":{"line":178,"column":24},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":24},"name":"path"},{"generated":{"line":178,"column":28},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":9}},{"generated":{"line":178,"column":29},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":67,"column":2}},{"generated":{"line":179,"column":0},"source":"node_modules/geotiff/dist-module/source/file.js","original":{"line":68,"column":1}}],"sources":{"node_modules/geotiff/dist-module/source/file.js":"import fs from 'fs';\nimport { BaseSource } from './basesource.js';\n\nfunction closeAsync(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, (err) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags, mode = undefined) {\n  return new Promise((resolve, reject) => {\n    fs.open(path, flags, mode, (err, fd) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync(...args) {\n  return new Promise((resolve, reject) => {\n    fs.read(...args, (err, bytesRead, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ bytesRead, buffer });\n      }\n    });\n  });\n}\n\nclass FileSource extends BaseSource {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.openRequest = openAsync(path, 'r');\n  }\n\n  async fetchSlice(slice) {\n    // TODO: use `signal`\n    const fd = await this.openRequest;\n    const { buffer } = await readAsync(\n      fd,\n      Buffer.alloc(slice.length),\n      0,\n      slice.length,\n      slice.offset,\n    );\n    return buffer.buffer;\n  }\n\n  async close() {\n    const fd = await this.openRequest;\n    await closeAsync(fd);\n  }\n}\n\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}\n"},"lineCount":null}},"error":null,"hash":"ea220904dd1582b018d1722ac4627039","cacheData":{"env":{}}}